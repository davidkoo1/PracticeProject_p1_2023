// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeProject.Data;

#nullable disable

namespace PracticeProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231013200252_ListsWorkLesson")]
    partial class ListsWorkLesson
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticeProject.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("PracticeProject.Models.CourseGrupa", b =>
                {
                    b.Property<int>("IdCourse")
                        .HasColumnType("int");

                    b.Property<string>("IdGrupa")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdCourse", "IdGrupa");

                    b.HasIndex("IdGrupa");

                    b.ToTable("CourseGrupas");
                });

            modelBuilder.Entity("PracticeProject.Models.Grupa", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Grupas");
                });

            modelBuilder.Entity("PracticeProject.Models.HomeWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("HomeWorks");
                });

            modelBuilder.Entity("PracticeProject.Models.LabWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("LabWorks");
                });

            modelBuilder.Entity("PracticeProject.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHomeWork")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLabWork")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTextWork")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("PracticeProject.Models.TextWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("TextWorks");
                });

            modelBuilder.Entity("PracticeProject.Models.CourseGrupa", b =>
                {
                    b.HasOne("PracticeProject.Models.Course", "Course")
                        .WithMany("courseGrupas")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PracticeProject.Models.Grupa", "Grupa")
                        .WithMany("courseGrupas")
                        .HasForeignKey("IdGrupa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Grupa");
                });

            modelBuilder.Entity("PracticeProject.Models.HomeWork", b =>
                {
                    b.HasOne("PracticeProject.Models.Lesson", "Lesson")
                        .WithMany("HomeWork")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("PracticeProject.Models.LabWork", b =>
                {
                    b.HasOne("PracticeProject.Models.Lesson", "Lesson")
                        .WithMany("LabWork")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("PracticeProject.Models.Lesson", b =>
                {
                    b.HasOne("PracticeProject.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("PracticeProject.Models.TextWork", b =>
                {
                    b.HasOne("PracticeProject.Models.Lesson", "Lesson")
                        .WithMany("TextWork")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("PracticeProject.Models.Course", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("courseGrupas");
                });

            modelBuilder.Entity("PracticeProject.Models.Grupa", b =>
                {
                    b.Navigation("courseGrupas");
                });

            modelBuilder.Entity("PracticeProject.Models.Lesson", b =>
                {
                    b.Navigation("HomeWork");

                    b.Navigation("LabWork");

                    b.Navigation("TextWork");
                });
#pragma warning restore 612, 618
        }
    }
}
