@using PracticeProject.ViewModels;
@model EditProfileViewModel

@{
    ViewData["Title"] = "Account Settings";
}
<link rel="stylesheet" href="~/css/edits.css">

<h1>Account Settings</h1>
<div class="form-container">
    <form method="post" asp-action="EditProfile" enctype="multipart/form-data">
        <div class="form-group">
            <label asp-for="Image">ImageFile</label>
            <input asp-for="Image" type="file">
        </div>
        @if (!User.IsInRole("student"))
        {
            <input type="hidden" asp-for="Roles" />
            <input type="hidden" asp-for="UserName" />

            <div class="form-group">
                <label asp-for="Name">Name</label>
                <input asp-for="Name" required>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Surname">Surname</label>
                <input asp-for="Surname" required>
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email">Email</label>
                <input asp-for="Email" required>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            var grupsSelectList = new SelectList(ViewBag.Grups, "Code", "Code");
            <div class="form-group anime-form-group">
                <label class="anime-label">Select Group</label>
                @Html.DropDownListFor(model => model.Grupa, grupsSelectList, new { @class = "form-control anime-select", id = "grupaDropdown" })
                @Html.ValidationMessageFor(model => model.Grupa, "", new { @class = "text-danger" })
            </div>

            @if (User.IsInRole("admin"))
            {
                <div class="form-group">
                    <p>
                        Roles <span id="fold"></span>
                        <div id="list">
                            <div class="checkbox-list">
                                @foreach (var role in ViewBag.Roles)
                                {
                                    var isChecked = Model.Roles.Contains(role.Name); // Check if the role is selected

                                    <label class="custom-checkbox">
                                        <input type="checkbox" name="selectedRoles" value="@role.Name" class="custom-control-input" @(
                                   isChecked ? "checked" : ""
                                   )>
                                        <span class="custom-control-label">@role.Name</span>
                                    </label>
                                    <br />
                                }
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                    </p>
                </div>
            }
        }

        <button type="submit" class="submit-button">Edit</button>
    </form>
</div>